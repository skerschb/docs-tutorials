title: Define Your Data Points
ref: define_dp
level: 4
stepnum: 1
content: |
  Decide which fields you would like to capture, and how
  they relate to each other. For our example we are using
  an inventory database, which tracks items and their
  quantities and properties.
  
  The traditional sql database would have us model this
  data in 2-3 separate tables for a truly normalized database.
  Or, the data can be modeled in one table.
  
  .. list-table::
     :header-rows: 1
     :widths: auto

     * - name
       - quantity
       - size
       - status
       - terms

     * - journal
       - 25
       - ``14x21,cm``
       - A
       - ``brown, lined``

     * - notebook
       - 50
       - ``8.5x11,in``
       - A
       - ``college-ruled,perforated``

     * - paper
       - 100
       - ``8.5x11,in``
       - D
       - ``watercolor``

     * - planner
       - 75
       - ``22.85x30,cm``
       - D
       - ``2019``

     * - postcard
       - 45
       - ``10x,cm``
       - D
       - ``double-sided,white``       

   The problem with this approach is that when data is squeezed into poorly
   defined columns that contain lists and non-standardized content, 
   it's very difficult to code around it.
   
   To being to structure your MongoDB data, define your data points.
   
   Ask these questions:
      
   what types of data would you store in an inventory
   database and how would you classify that data? Do you use Strings, Numbers, Dates?
   Lists? What sort of queries would you run against this data and how would the tabular
   format complicate parsing results?
  
---      
title: Put Your Data in JSON format
ref: json_implement
level: 4
stepnum: 2
content: |
  To look at things the MongoDB way, first understand that data is stored as JSON
  documents, and not tables with columns and rows. You define these documents
  as you choose, and you can choose to provide a well-defined schema (defined data points),
  or leave your schema open to change as your application changes.
  
  A JSON document that might store an inventory item might look like
  
  .. class:: copyable-code
  .. code-block:: javascript
  
     { item: "journal", qty: 25, size: { h: 14, w: 21, uom: "cm" }, status: "A" },
     { item: "notebook", qty: 50, size: { h: 8.5, w: 11, uom: "in" }, status: "A" },
     { item: "paper", qty: 100, size: { h: 8.5, w: 11, uom: "in" }, status: "D" },
     { item: "planner", qty: 75, size: { h: 22.85, w: 30, uom: "cm" }, status: "D" },
     { item: "postcard", qty: 45, size: { h: 10, w: 15.25, uom: "cm" }, status: "A" }
     
  In this JSON example, we can embed data within our data points.
  
     
  
  
  
